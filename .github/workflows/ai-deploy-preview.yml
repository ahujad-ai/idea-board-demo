name: ðŸ¤– AI-Assisted Preview Deployment

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  ai-deploy:
    name: AI Deploy (${{ github.event.comment.id }})
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, 'deploy-preview')
    concurrency:
      group: ai-deploy-${{ github.event.comment.id }}
    env:
      GITHUB_COMMENT: ${{ github.event.comment.body }}

    steps:
      - name: ðŸ§° Install Dependencies (fast)
        run: |
          pip install openai 
          
      - name: ðŸ“¦ Checkout repository
        uses: actions/checkout@v4

      - name: ðŸ§  Generate Deployment Commands with GPT-5
        id: ai_generate
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python3 <<'EOF'
          from openai import OpenAI
          import os

          comment = os.getenv("GITHUB_COMMENT", "/deploy-preview feature-x")
          prompt = f"""
          Interpret this PR comment: "{comment}".
          Generate safe kubectl commands to deploy the feature environment.
          The k8s manifests are under ./k8s.
          Avoid destructive operations like delete.
          """

          client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
          response = client.chat.completions.create(
              model="gpt-5",
              messages=[{"role": "user", "content": prompt}]
          )
          cmds = response.choices[0].message.content.strip()
          print("ðŸ§  Generated Commands:\n", cmds)
          with open("commands.sh", "w") as f:
              f.write(cmds)
          EOF

      - name: ðŸš€ Execute AI-Generated Commands
        run: |
          echo "Running AI generated commands:"
          cat commands.sh
          bash commands.sh

      - name: ðŸ’¬ Post Deployment Result
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ðŸ¤– **AI-assisted preview deployment completed!**
            Commands executed:
            ```
            $(cat commands.sh)
            ```
