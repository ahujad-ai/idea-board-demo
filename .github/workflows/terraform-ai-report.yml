name: Terraform AI Report

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  terraform-ai-report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init & Plan
        working-directory: ./terraform/gcp
        run: |
          terraform init -input=false
          terraform plan -no-color -out=tfplan
          terraform show -no-color -json tfplan > tfplan.json
          terraform show -no-color tfplan > tfplan.txt

      - name: Install Python dependencies
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install openai fpdf

      - name: Generate AI Summary PDF
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          . venv/bin/activate
          python3 <<'EOF'
          import os, json
          from openai import OpenAI
          from fpdf import FPDF

          client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

          with open("terraform/tfplan.txt") as f:
              plan_text = f.read()

          prompt = f"""
          You are an infrastructure assistant.
          Analyze the following Terraform plan and generate a concise summary:
          - List all resources by type and name.
          - Explain dependencies and relationships.
          - Mention regions, instance sizes, networking, storage, databases, etc.
          - Highlight any potential risks or cost drivers.
          ---
          {plan_text[:15000]}
          """

          response = client.chat.completions.create(
              model="gpt-5",
              messages=[{"role": "user", "content": prompt}],
              temperature=0.3,
          )

          summary = response.choices[0].message.content.strip()

          pdf = FPDF()
          pdf.add_page()
          pdf.set_font("Arial", "B", 14)
          pdf.cell(200, 10, "Terraform Resource Summary", ln=True, align="C")
          pdf.set_font("Arial", "", 12)
          for line in summary.split("\n"):
              pdf.multi_cell(0, 10, line)
          pdf.output("terraform-summary.pdf")

          print("âœ… Generated terraform-summary.pdf")
          EOF

      - name: Upload AI Summary PDF
        uses: actions/upload-artifact@v4
        with:
          name: terraform-summary
          path: terraform-summary.pdf
